<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	 <default-servlet-handler/>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory 
	<resources mapping="/resources/**" location="/resources/" />-->

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory 
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	-->
	 <!-- Tiles로 JSP 출력 -->
  <beans:bean id="viewResolver"
    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    <beans:property name="viewClass"
      value="org.springframework.web.servlet.view.tiles2.TilesView" />
  </beans:bean>
 
  <!-- Tiles 환경 설정 -->
  <beans:bean id="tilesconfigurer"
    class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
    <beans:property name="definitions" value="/WEB-INF/tiles2def.xml" />
  </beans:bean>
	
  
	<context:component-scan base-package="hb.cinema.pk" />
	
	<context:component-scan base-package="hb.cinema.pk.board" />
	<!--  
	<context:component-scan base-package="hb.cinema.pk.board.reply" />
	<context:component-scan base-package="hb.cinema.pk.event" />
	<context:component-scan base-package="hb.cinema.pk.event.reply" />
	<context:component-scan base-package="hb.cinema.pk.media" />
	<context:component-scan base-package="hb.cinema.pk.reser" />
	<context:component-scan base-package="hb.cinema.pk.user" />
<context:component-scan base-package="hb.cinema.pk.admin" />
-->
</beans:beans>